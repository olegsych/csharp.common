root = true

[*]
# Make git diff output clean and easy to read
trim_trailing_whitespace = true
insert_final_newline = true

# Don't attempt the impossible. Let Visual Studio use CRLF and rely on .gitattributes to normalize line endings.
end_of_line = unset

indent_style = space
indent_size = 4

[*.cs]

# Visual Studio 2017 editor settings for C#
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# Follow Beck's simple design rules https://www.martinfowler.com/bliki/BeckDesignRules.html
# to make code reveal intent, without duplication and fewest elements

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#this_and_me
# Don't use "this." unlesss it's required to disambiguate variables
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language_keywords
# Use built-in language types instead of framework type names
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#normalize_modifiers
# Use default order of modifiers
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error
# Don't specify redundant private accessibility, it's the C# default.
dotnet_style_require_accessibility_modifiers = never:error

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_level
# Use inline initializers instead of separate initialization statements
dotnet_style_collection_initializer = true:suggestion
dotnet_style_object_initializer = true:suggestion
# Use tuple names instead of ItemX properties
dotnet_style_explicit_tuple_names = true:suggestion
# Use ?? instead of null checks
dotnet_style_coalesce_expression = true:suggestion
# Use .? instead of null checks
dotnet_style_null_propagation = true:suggestion
# Use inferred names for tuples and anonymous types
dotnet_prefer_inferred_tuple_names = true:suggestion
dotnet_prefer_inferred_anonymous_type_member_names = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#var
# Use var only when type is clearly specified in the statement
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_elsewhere = false:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_bodied_members
# Use expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#pattern_matching
# Use pattern matching
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#inlined_variable_declarations
# Declare out variables inline
csharp_style_inlined_variable_declaration = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_level_csharp
# Use default instead of default(TypeName)
csharp_prefer_simple_default_expression = true:suggestion
# Deconstruct tuples into variables to use <var> instead of <tuple>.<var>
csharp_style_deconstructed_variable_declaration = true:suggestion
# Use local functions instead of anonymous functions for better readability
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#null_checking
# Use variable ?? throw ... instead of if (variable == null) { throw ... }
csharp_style_throw_expression = true:suggestion
# Use ?.Invoke instead of if (variable == null) { variable.Incoke(...) }
csharp_style_conditional_delegate_call = true:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#code_block
# Don't use braces for single-line statements. When nesting control flow statements, extract method instead of adding braces.
csharp_prefer_braces = false:suggestion

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#usings
# Place System namespaces first in the using blocks to move your own namespaces closer to your code
dotnet_sort_system_directives_first = true:error

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#newline
# Use K&R brace style instead of the Visual Studio default (Allman).
# https://en.wikipedia.org/wiki/Indentation_style#K&R
#
# A new line before an open brace helps to visually separate the preceding line from the code block after the brace.
# Don't use it for code blocks that should be short - conditional statements, properties, methods.
# If you feel your code is not readable without new line, focus on making it simpler.
# New line before an open brace is OK for types and namespaces. We don't expect them to be always short.
csharp_new_line_before_open_brace = types
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#indent
# Use default indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#a-namespacingspacing-optionsa
# Don't use unnecessary spaces. Syntax-highligted C# is readable enough.
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#a-namewrappingwrapping-optionsa
# These are defaults
# TODO: Think about setting csharp_preserve_single_line_statements = false to place multiple single-line statements on separate lines
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
